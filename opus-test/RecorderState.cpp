/*==============================================================================
Description:
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************
#include "stdafx.h"

#include "RecorderState.h"

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Constructor

RecorderState::RecorderState()
{
   reset();
}

void RecorderState::reset()
{
   mSX = cState_Stopped;
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Return the state as a string.

const char* RecorderState::asString()
{
   switch (mSX)
   {
   case cState_Stopped:    return "Stopped  ";
   case cState_Recording:  return "Recording";
   case cState_Paused:     return "Paused   ";
   default: return "UNKNOWN";
   }
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Set state variables.

void RecorderState::set_Stopped()
{ 
   mSX = cState_Stopped;
}

void RecorderState::set_Recording()
{
   mSX = cState_Recording;
}

void RecorderState::set_Paused()
{
   mSX = cState_Paused;
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
